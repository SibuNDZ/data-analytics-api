{
  "openapi": "3.0.3",
  "info": {
    "title": "Predictive Analytics API",
    "description": "Comprehensive API for Data Management, Data Analysis, Business Intelligence, Machine Learning, and Artificial Intelligence services <br><a href='mailto:info@dsnresearch.com'>Send email to API Support</a>",
    "version": "1.1.0",
    "contact": {
      "name": "API Support",
      "email": "info@dsnresearch.com",
      "url": "https://dsnresearch.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://data-analytics-api-prod.sibusiso-ndzukuma.workers.dev",
      "description": "Production server"
    },
    {
      "url": "http://127.0.0.1:8787",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "BearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API Key for authentication. Include in request header."
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token for authentication"
      }
    },
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": { "type": "string", "example": "An error occurred" },
          "code": { "type": "string", "example": "ERROR_CODE" },
          "details": { "type": "object", "additionalProperties": true },
          "success": { "type": "boolean", "example": false }
        },
        "required": ["error", "code", "success"]
      },
      "SignupRequest": {
        "type": "object",
        "properties": {
          "companyName": { "type": "string", "minLength": 1, "example": "Acme Corp", "description": "Company or organization name" },
          "email": { "type": "string", "format": "email", "example": "user@example.com", "description": "Valid email address" },
          "password": { "type": "string", "minLength": 8, "example": "SecurePass123!", "description": "Password (minimum 8 characters)" },
          "plan": { "type": "string", "enum": ["free", "basic", "pro", "premium", "enterprise"], "example": "free", "default": "free", "description": "Subscription plan tier" },
          "name": { "type": "string", "example": "John Doe", "description": "User's full name" }
        },
        "required": ["companyName", "email", "password"]
      },
      "SignupResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": true },
          "message": { "type": "string", "example": "Account created successfully" },
          "apiKey": { "type": "string", "example": "ak_1234567890abcdef" },
          "token": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." },
          "verifyEmailUrl": { "type": "string", "format": "uri", "example": "https://api.example.com/verify?token=abc123" },
          "clientId": { "type": "integer", "example": 12345 },
          "userId": { "type": "integer", "example": 67890 },
          "companyName": { "type": "string", "example": "Acme Corp" },
          "plan": { "type": "string", "example": "free" }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "format": "email", "example": "user@example.com" },
          "password": { "type": "string", "minLength": 8, "example": "SecurePass123!" }
        },
        "required": ["email", "password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": true },
          "token": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." },
          "user": {
            "type": "object",
            "properties": {
              "id": { "type": "integer", "example": 67890 },
              "name": { "type": "string", "example": "John Doe" },
              "email": { "type": "string", "example": "user@example.com" }
            }
          },
          "client": {
            "type": "object",
            "properties": {
              "id": { "type": "integer", "example": 12345 },
              "name": { "type": "string", "example": "Acme Corp" },
              "plan": { "type": "string", "example": "free" }
            }
          },
          "api_key": { "type": "string", "example": "ak_1234567890abcdef" }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 12345 },
          "name": { "type": "string", "example": "Acme Corp" },
          "created_at": { "type": "string", "format": "date-time", "example": "2025-01-15T10:30:00Z" }
        },
        "required": ["id", "name", "created_at"]
      },
      "DataUploadRequest": {
        "type": "object",
        "properties": {
          "source_name": { "type": "string", "minLength": 1, "example": "Sales Q3 Data", "description": "Descriptive name for the data source" },
          "source_type": { "type": "string", "enum": ["file", "database", "api", "stream"], "example": "file", "description": "Type of data source" },
          "data_rows": {
            "type": "array",
            "minItems": 1,
            "items": { "type": "object", "additionalProperties": true },
            "example": [
              { "id": 1, "product": "Widget A", "sales": 1500, "date": "2025-07-01" },
              { "id": 2, "product": "Widget B", "sales": 2300, "date": "2025-07-02" }
            ],
            "description": "Array of data objects to be stored"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true,
            "example": { "region": "South Africa", "currency": "ZAR" },
            "description": "Optional metadata about the data source"
          }
        },
        "required": ["source_name", "source_type", "data_rows"]
      },
      "DataUploadResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": true },
          "message": { "type": "string", "example": "Data uploaded successfully" },
          "source_id": { "type": "integer", "example": 789 },
          "rows_inserted": { "type": "integer", "example": 2, "description": "Number of rows successfully inserted" }
        }
      },
      "DataSource": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "example": 789 },
          "source_name": { "type": "string", "example": "Sales Q3 Data" },
          "source_type": { "type": "string", "example": "file" },
          "row_count": { "type": "integer", "example": 2 },
          "last_ingested": { "type": "string", "format": "date-time", "example": "2025-10-02T14:30:00Z" },
          "created_at": { "type": "string", "format": "date-time", "example": "2025-09-15T09:00:00Z" },
          "metadata": { "type": "object", "additionalProperties": true }
        }
      },
      "DataSourcesResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": true },
          "data_sources": { "type": "array", "items": { "$ref": "#/components/schemas/DataSource" } },
          "total_count": { "type": "integer", "example": 5, "description": "Total number of data sources" }
        }
      },
      "AnalyticsQueryRequest": {
        "type": "object",
        "properties": {
          "source_id": { "type": "integer", "example": 789, "description": "ID of the data source to analyze" },
          "analysis_type": { "type": "string", "enum": ["descriptive", "correlation", "trend", "forecasting", "clustering"], "example": "descriptive", "description": "Type of analysis to perform" },
          "parameters": { "type": "object", "additionalProperties": true, "example": { "columns": ["sales", "revenue"], "time_period": "last_30_days" }, "description": "Analysis-specific parameters" }
        },
        "required": ["source_id", "analysis_type"]
      },
      "AnalyticsQueryResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": true },
          "job_id": { "type": "integer", "example": 456 },
          "status": { "type": "string", "enum": ["pending", "processing", "completed", "failed"], "example": "pending" },
          "results": { "type": "object", "description": "Analysis results (available when status is 'completed')" },
          "estimated_completion": { "type": "string", "format": "date-time", "example": "2025-10-02T15:00:00Z" }
        }
      },
      "JobStatusResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": true },
          "job": {
            "type": "object",
            "properties": {
              "id": { "type": "integer", "example": 456 },
              "job_type": { "type": "string", "example": "analytics" },
              "status": { "type": "string", "enum": ["pending", "processing", "completed", "failed"], "example": "completed" },
              "results": { "type": "object", "example": { "mean_sales": 1900, "total_revenue": 3800, "trend": "increasing" } },
              "error_message": { "type": "string", "example": null },
              "created_at": { "type": "string", "format": "date-time", "example": "2025-10-02T14:30:00Z" },
              "completed_at": { "type": "string", "format": "date-time", "example": "2025-10-02T14:35:00Z" }
            }
          }
        }
      },
      "ModelListResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": true },
          "models": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "integer", "example": 101 },
                "model_name": { "type": "string", "example": "Sales Forecaster v2" },
                "model_type": { "type": "string", "enum": ["classification", "regression", "clustering", "time_series"], "example": "regression" },
                "version": { "type": "string", "example": "2.1.0" },
                "is_active": { "type": "boolean", "example": true },
                "accuracy": { "type": "number", "format": "float", "example": 0.92, "description": "Model accuracy score (0-1)" },
                "created_at": { "type": "string", "format": "date-time", "example": "2025-08-01T10:00:00Z" }
              }
            }
          },
          "total_count": { "type": "integer", "example": 3 }
        }
      },
      "PredictionRequest": {
        "type": "object",
        "properties": {
          "model_id": { "type": "integer", "example": 101, "description": "ID of the model to use for prediction" },
          "input_data": { "type": "object", "additionalProperties": true, "example": { "product": "Widget A", "month": "October", "marketing_spend": 5000 }, "description": "Input features for prediction" }
        },
        "required": ["model_id", "input_data"]
      },
      "PredictionResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": true },
          "prediction": {
            "type": "object",
            "properties": {
              "model_id": { "type": "integer", "example": 101 },
              "prediction": { "type": "string", "example": "2450" },
              "confidence": { "type": "number", "format": "float", "minimum": 0, "maximum": 1, "example": 0.87, "description": "Confidence score (0-1)" },
              "timestamp": { "type": "string", "format": "date-time", "example": "2025-10-02T14:45:00Z" }
            }
          }
        }
      },
      "ReportGenerateRequest": {
        "type": "object",
        "properties": {
          "report_type": { "type": "string", "enum": ["summary", "detailed", "executive", "technical"], "example": "summary", "description": "Type of report to generate" },
          "parameters": { "type": "object", "additionalProperties": true, "example": { "source_ids": [789, 790], "date_range": { "start": "2025-07-01", "end": "2025-09-30" }, "format": "pdf" }, "description": "Report generation parameters" }
        },
        "required": ["report_type"]
      },
      "ReportResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": true },
          "report": {
            "type": "object",
            "properties": {
              "report_id": { "type": "integer", "example": 555 },
              "report_type": { "type": "string", "example": "summary" },
              "generated_at": { "type": "string", "format": "date-time", "example": "2025-10-02T15:00:00Z" },
              "download_url": { "type": "string", "format": "uri", "example": "https://api.example.com/reports/download/555" },
              "data": { "type": "object", "additionalProperties": true, "example": { "total_sales": 50000, "growth_rate": 15.3, "top_products": ["Widget A", "Widget B"] } }
            }
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "string", "enum": ["healthy", "degraded", "unhealthy"], "example": "healthy" },
          "timestamp": { "type": "string", "format": "date-time", "example": "2025-10-02T14:00:00Z" },
          "database": { "type": "string", "example": "connected", "description": "Database connection status" },
          "version": { "type": "string", "example": "1.1.0" }
        }
      },
      "APIOverviewResponse": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Predictive Analytics API" },
          "version": { "type": "string", "example": "1.1.0" },
          "endpoints": {
            "type": "object",
            "additionalProperties": true,
            "example": {
              "authentication": ["/api/signup", "/api/login"],
              "data_management": ["/api/data/upload", "/api/data/sources"],
              "analytics": ["/api/analytics/query", "/api/analytics/jobs/{jobId}"],
              "machine_learning": ["/api/models/list", "/api/models/predict"],
              "reporting": ["/api/reports/generate"],
              "ai_nlp": ["/api/ai/query", "/api/ai/sentiment", "/api/ai/insights"]
            }
          },
          "authentication": { "type": "string", "example": "API Key or Bearer Token required" }
        }
      },
      "AIQueryRequest": {
        "type": "object",
        "properties": {
          "query": { "type": "string", "example": "What's the average sales per region?", "description": "Natural language question about your data" },
          "source_id": { "type": "integer", "example": 789, "description": "ID of the data source to query" }
        },
        "required": ["query", "source_id"]
      },
      "AIQueryResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": true },
          "query": { "type": "string", "example": "What's the average sales per region?" },
          "answer": { "type": "string", "example": "The average sales per region is R15,200." },
          "source_context": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "example": "Q3 Sales Data" },
              "rows": { "type": "integer", "example": 120 }
            }
          }
        }
      },
      "SentimentAnalysisRequest": {
        "type": "object",
        "properties": {
          "text": { "type": "string", "example": "I love this product!", "description": "Text to analyze for sentiment" }
        },
        "required": ["text"]
      },
      "SentimentAnalysisResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": true },
          "text": { "type": "string", "example": "I love this product!" },
          "sentiment": { "type": "string", "enum": ["POSITIVE", "NEGATIVE"], "example": "POSITIVE" },
          "confidence": { "type": "number", "format": "float", "minimum": 0, "maximum": 1, "example": 0.95 }
        }
      },
      "InsightsRequest": {
        "type": "object",
        "properties": {
          "source_id": { "type": "integer", "example": 789, "description": "ID of the data source to generate insights from" }
        },
        "required": ["source_id"]
      },
      "InsightsResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": true },
          "source": { "type": "string", "example": "Q3 Sales Data" },
          "insights": { "type": "string", "example": "1. Sales are highest in the Western Cape region...\n2. Product A has 30% higher conversion than Product B..." },
          "generated_at": { "type": "string", "format": "date-time", "example": "2025-10-02T15:10:00Z" }
        }
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Authentication required",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" },
            "example": {
              "error": "Authentication required",
              "code": "UNAUTHORIZED",
              "success": false
            }
          }
        }
      },
      "RateLimitExceeded": {
        "description": "Rate limit exceeded",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" },
            "example": {
              "error": "Rate limit exceeded",
              "code": "RATE_LIMIT_EXCEEDED",
              "details": { "remaining": 0, "reset_at": "2025-10-02T15:00:00Z" },
              "success": false
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" },
            "example": {
              "error": "Invalid request data",
              "code": "VALIDATION_ERROR",
              "details": {
                "fields": ["email is required", "password must be at least 8 characters"]
              },
              "success": false
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" },
            "example": {
              "error": "Resource not found",
              "code": "NOT_FOUND",
              "success": false
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" },
            "example": {
              "error": "An unexpected error occurred",
              "code": "INTERNAL_SERVER_ERROR",
              "success": false
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "System",
      "description": "System health and monitoring endpoints"
    },
    {
      "name": "Documentation",
      "description": "API documentation and information"
    },
    {
      "name": "Authentication",
      "description": "User authentication and account management"
    },
    {
      "name": "Data Management",
      "description": "Data ingestion and source management"
    },
    {
      "name": "Data Analysis",
      "description": "Analytics and statistical operations"
    },
    {
      "name": "Machine Learning",
      "description": "ML model management and predictions"
    },
    {
      "name": "Business Intelligence",
      "description": "Report generation and insights"
    },
    {
      "name": "AI & NLP",
      "description": "Natural language processing and AI-powered data analysis"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": ["System"],
        "summary": "Health check",
        "description": "Check if the API is running and database connectivity",
        "security": [],
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HealthResponse" }
              }
            }
          },
          "503": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api": {
      "get": {
        "tags": ["Documentation"],
        "summary": "API Overview",
        "description": "Get list of available endpoints and usage info",
        "security": [],
        "responses": {
          "200": {
            "description": "API metadata and endpoints",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIOverviewResponse" }
              }
            }
          }
        }
      }
    },
    "/api/signup": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Create new account",
        "description": "Register a new client account and receive an API key",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SignupRequest" },
              "examples": {
                "freePlan": {
                  "summary": "Free plan signup",
                  "value": {
                    "companyName": "Startup Inc",
                    "email": "founder@startup.com",
                    "password": "SecurePass123!",
                    "plan": "free",
                    "name": "Jane Founder"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Account created successfully", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SignupResponse" } } } },
          "400": { "$ref": "#/components/responses/ValidationError" },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": {
                  "error": "An account with this email already exists",
                  "code": "CONFLICT",
                  "success": false
                }
              }
            }
          },
          "429": { "$ref": "#/components/responses/RateLimitExceeded" }
        }
      }
    },
    "/api/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User login",
        "description": "Authenticate user and receive JWT token",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LoginResponse" } } } },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": {
                  "error": "Invalid email or password",
                  "code": "INVALID_CREDENTIALS",
                  "success": false
                }
              }
            }
          },
          "403": {
            "description": "Email not verified",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": {
                  "error": "Email address not verified",
                  "code": "EMAIL_NOT_VERIFIED",
                  "success": false
                }
              }
            }
          },
          "429": { "$ref": "#/components/responses/RateLimitExceeded" }
        }
      }
    },
    "/api/data/upload": {
      "post": {
        "tags": ["Data Management"],
        "summary": "Upload data for processing",
        "description": "Upload structured data to be stored and analyzed",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DataUploadRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Data uploaded successfully", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DataUploadResponse" } } } },
          "400": { "$ref": "#/components/responses/ValidationError" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "413": {
            "description": "Payload too large",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": {
                  "error": "Request payload exceeds maximum size limit",
                  "code": "PAYLOAD_TOO_LARGE",
                  "details": { "max_size": "10MB" },
                  "success": false
                }
              }
            }
          },
          "429": { "$ref": "#/components/responses/RateLimitExceeded" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/api/data/sources": {
      "get": {
        "tags": ["Data Management"],
        "summary": "List all data sources",
        "description": "Get a list of all data sources for the authenticated client",
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer", "minimum": 1, "default": 1 }, "description": "Page number for pagination" },
          { "name": "limit", "in": "query", "schema": { "type": "integer", "minimum": 1, "maximum": 100, "default": 20 }, "description": "Number of items per page" }
        ],
        "responses": {
          "200": { "description": "List of data sources", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DataSourcesResponse" } } } },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "429": { "$ref": "#/components/responses/RateLimitExceeded" }
        }
      }
    },
    "/api/analytics/query": {
      "post": {
        "tags": ["Data Analysis"],
        "summary": "Run analytics query",
        "description": "Start an analysis job on a data source",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AnalyticsQueryRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Analysis job created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AnalyticsQueryResponse" } } } },
          "400": { "$ref": "#/components/responses/ValidationError" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "429": { "$ref": "#/components/responses/RateLimitExceeded" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/api/analytics/jobs/{jobId}": {
      "get": {
        "tags": ["Data Analysis"],
        "summary": "Get analysis job status",
        "description": "Retrieve the status and results of an analytics job",
        "parameters": [
          { "name": "jobId", "in": "path", "required": true, "schema": { "type": "integer", "minimum": 1 }, "description": "ID of the job to retrieve", "example": 456 }
        ],
        "responses": {
          "200": { "description": "Job status and results", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/JobStatusResponse" } } } },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "429": { "$ref": "#/components/responses/RateLimitExceeded" }
        }
      }
    },
    "/api/models/list": {
      "get": {
        "tags": ["Machine Learning"],
        "summary": "List available ML models",
        "description": "Get a list of active machine learning models",
        "responses": {
          "200": { "description": "List of ML models", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ModelListResponse" } } } },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "429": { "$ref": "#/components/responses/RateLimitExceeded" }
        }
      }
    },
    "/api/models/predict": {
      "post": {
        "tags": ["Machine Learning"],
        "summary": "Generate prediction",
        "description": "Use a trained model to make a prediction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PredictionRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Prediction result", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PredictionResponse" } } } },
          "400": { "$ref": "#/components/responses/ValidationError" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "429": { "$ref": "#/components/responses/RateLimitExceeded" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/api/reports/generate": {
      "post": {
        "tags": ["Business Intelligence"],
        "summary": "Generate report",
        "description": "Generate a summary report of data and analytics",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ReportGenerateRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Generated report", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ReportResponse" } } } },
          "400": { "$ref": "#/components/responses/ValidationError" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "429": { "$ref": "#/components/responses/RateLimitExceeded" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/api/ai/query": {
      "post": {
        "tags": ["AI & NLP"],
        "summary": "Ask AI about your data",
        "description": "Ask natural language questions about your datasets using Workers AI.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AIQueryRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AI response generated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AIQueryResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/ValidationError" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/api/ai/sentiment": {
      "post": {
        "tags": ["AI & NLP"],
        "summary": "Analyze sentiment",
        "description": "Analyze the sentiment (positive/negative) of text using AI.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SentimentAnalysisRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sentiment analysis result",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SentimentAnalysisResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/ValidationError" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/api/ai/insights": {
      "post": {
        "tags": ["AI & NLP"],
        "summary": "Generate business insights",
        "description": "Generate actionable business insights from your data using AI.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InsightsRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Insights generated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/InsightsResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/ValidationError" },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    }
  }
}